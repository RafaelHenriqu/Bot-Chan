"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.validatePathLike = exports.validateBoolean = exports.validateString = void 0;
const zod_1 = __importDefault(require("zod"));
const error_1 = __importDefault(require("./structures/error"));
const stringSchema = zod_1.default.coerce.string();
const booleanSchema = zod_1.default.coerce.boolean();
const pathLikeSchema = zod_1.default.string().or(zod_1.default.instanceof(Buffer));
function validateString(value, code, starts) {
    if (starts) {
        validateString(starts);
    }
    handleParser(stringSchema, value, 'string', code);
}
exports.validateString = validateString;
function validateBoolean(value, code) {
    handleParser(booleanSchema, value, 'boolean', code);
}
exports.validateBoolean = validateBoolean;
function validatePathLike(value, code) {
    handleParser(pathLikeSchema, value, 'string or Buffer', code);
}
exports.validatePathLike = validatePathLike;
function handleParser(schema, value, expect, code) {
    try {
        schema.parse(value);
    }
    catch {
        throw new error_1.default(code ? `INVALID_${code}` : 'VALIDATION_ERROR', `Expect ${expect}, got ${typeof value}`);
    }
}
//# sourceMappingURL=assertions.js.map