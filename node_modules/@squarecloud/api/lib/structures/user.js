"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FullUser = void 0;
const application_1 = __importDefault(require("./application"));
const collection_1 = __importDefault(require("./collection"));
/**
 * Represents a Square Cloud user
 *
 * @constructor
 * @param apiManager - The APIManager for this user
 * @param data - The data from this user
 */
class User {
    /** The user's id */
    id;
    /** The user's Discord tag */
    tag;
    /** The user's locale */
    locale;
    /** The user's current plan */
    plan;
    /** Whether the user is blocked for Square Cloud services or not */
    blocklist;
    constructor(_apiManager, data) {
        this.id = data.user.id;
        this.tag = data.user.tag;
        this.locale = data.user.locale;
        this.blocklist = data.user.blocklist;
        this.plan = {
            ...data.user.plan,
            duration: data.user.plan.duration.formatted,
            expiresTimestamp: data.user.plan.duration.raw,
            expires: data.user.plan.duration.raw
                ? new Date(data.user.plan.duration.raw)
                : undefined,
        };
    }
    /** Whether you have access to private information or not */
    hasAccess() {
        const email = Reflect.get(this, 'email');
        return email && email !== 'Access denied';
    }
}
exports.default = User;
/**
 * Represents a Square Cloud user
 *
 * @constructor
 * @param apiManager - The APIManager for this user
 * @param data - The data from this user
 */
class FullUser extends User {
    /** The user's registered email */
    email;
    /** The user's registered applications Collection */
    applications;
    constructor(apiManager, data) {
        super(apiManager, data);
        this.email = data.user.email;
        this.applications = new collection_1.default(data.applications.map((app) => [app.id, new application_1.default(apiManager, app)]));
    }
}
exports.FullUser = FullUser;
//# sourceMappingURL=user.js.map