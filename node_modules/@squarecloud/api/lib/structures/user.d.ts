import APIManager from '../managers/api';
import { UserResponse } from '../types';
import { UserPlanData } from '../types/user';
import Application from './application';
import Collection from './collection';
/**
 * Represents a Square Cloud user
 *
 * @constructor
 * @param apiManager - The APIManager for this user
 * @param data - The data from this user
 */
export default class User {
    /** The user's id */
    id: string;
    /** The user's Discord tag */
    tag: string;
    /** The user's locale */
    locale: string;
    /** The user's current plan */
    plan: UserPlanData;
    /** Whether the user is blocked for Square Cloud services or not */
    blocklist: boolean;
    constructor(_apiManager: APIManager, data: UserResponse);
}
/**
 * Represents a Square Cloud user
 *
 * @constructor
 * @param apiManager - The APIManager for this user
 * @param data - The data from this user
 */
export declare class FullUser extends User {
    /** The user's registered email */
    email: string;
    /** The user's registered applications Collection */
    applications: Collection<string, Application>;
    constructor(apiManager: APIManager, data: UserResponse);
}
export default interface User {
    /** The user's id */
    id: string;
    /** The user's Discord tag */
    tag: string;
    /** The user's locale */
    locale: string;
    /** The user's current plan */
    plan: UserPlanData;
    /** Whether the user is blocked for Square Cloud services or not */
    blocklist: boolean;
    /** Whether you have access to private information or not */
    hasAccess(): this is FullUser;
}
